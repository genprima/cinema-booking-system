version: '3.8'

services:
  app:
    build: .
    container_name: cinema-booking-app
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/cinema_booking_system
      SPRING_DATASOURCE_USERNAME: gen
      SPRING_DATASOURCE_PASSWORD: postgres
      MINIO_INTERNAL_ENDPOINT: http://minio:9000
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin123
    depends_on:
      - db
      - minio
      - createbuckets
    networks:
      - app-network

  db:
    image: postgres:16
    container_name: cinema-booking-db
    environment:
      POSTGRES_DB: cinema_booking_system
      POSTGRES_USER: gen
      POSTGRES_PASSWORD: postgres
    ports:
      - "5433:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - app-network

  minio:
    image: minio/minio:latest
    container_name: minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin123
      MINIO_SERVER_URL: http://localhost:9000
      MINIO_DOMAIN: minio,localhost
      MINIO_BROWSER_REDIRECT_URL: http://localhost:9001
    command: server /data --console-address ":9001" --address ":9000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    volumes:
      - minio_data:/data
    networks:
      - app-network

  createbuckets:
    image: minio/mc:latest
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      sleep 5;
      /usr/bin/mc alias set myminio http://minio:9000 minioadmin minioadmin123;
      /usr/bin/mc mb myminio/cinema-media --ignore-existing;
      exit 0;
      "
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  db_data:
  minio_data: 